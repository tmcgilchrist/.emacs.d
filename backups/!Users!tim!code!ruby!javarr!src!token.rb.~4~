class Token

  def initialize(kind, spelling, position)
    @kind = kind
    @spelling = spelling
    @position = position
  end

  attr_accessor :kind, :spelling, :position

  def ==(other)
     return (self.kind == other.kind) &&
      (self.spelling == other.spelling) &&
      (self.position == other.position)
  end
end

# TODO Might be a good idea to use Strings rather than ints?
class TokenType
  attr_accessor :value
  def initialize(value)
    @value = value
  end

  def to_s
    value
  end

  BOOLEAN = new("boolean")
  BREAK = new("break")

  CONTINUE = new("continue")
  ELSE = new("else")
  FLOAT = new("float")
  FOR = new("for")
  IF = new("if")
  INT = new("int")
  RETURN = new("return")
  VOID = new("void")
  WHILE = new("while")
  
  # operators
  PLUS = 11
  MINUS = 12
  MULT = 13
  DIV = 14
  NOT = 15
  NOTEQ = 16
  EQ = 17
  EQEQ = 18
  LT = 19
  LTEQ = 20
  GT = 21
  GTEQ = 22
  ANDAND = 23
  OROR = 24
  
  # separators
  LCURLY = 25
  RCURLY = 26
  LPAREN = 27
  RPAREN = 28
  LBRACKET = 29
  RBRACKET = 30 
  SEMICOLON = 31
  COMMA = 32
  
  # identifiers
  ID = 33
  
  # literals
  INTLITERAL = 34
  FLOATLITERAL = 35
  BOOLEANLITERAL = 36
  STRINGLITERAL = 37

  # special tokens...
  ERROR = 38
  EOF = 39

  COMMENT = 40

  class << self
    private :new
  end
end


