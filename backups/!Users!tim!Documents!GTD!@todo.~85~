        @TODO
+ complete riak fast track tutorial
+ pi.co url shortener
+ research riak implementation and architecture



+ setup jekyll for github blog repo

+ research Amazon on scalability blog
+ JVM language shootout. JRuby/Scala/Clojure/Jython
+ blog posts about Amazon hiring process
+ research Amazon Web Services team

+ distributed systems theory covered @ UNSW course
+ Java refresher?
+ Erlang distributed systems coding
+ NoSQL database based application
Ideally I would like some sort of web app with a distributed backend, using either Queues, Clustered/Sharded Database, calling out to Erlang systems over REST

        -> Amazon Dynamo, SimpleDB

+ scalaris source code and demo app?

+ create a blog on github using jeykll and github pages

http://testdrivenwebsites.com/2011/08/17/different-ways-of-code-reuse-in-rspec/

Google DNS with Geolocation? How does www.google.com go to my closest Google Datacenter?

quorum definition?
mean / median definition in statistics

session storage in Rails and Java Servlets?

Dynamo - favours eventual consistency 

Google BigTable & GFS research paper

Why is strong consistency so expensive in distributed systems?

Anti-entropy using Merkle trees
Consistent Hashing
Vector clocks with reconciliation during reads
Gossip-based membership protocol and failure detection.

Interested in how you'd structure an application with only get() and put() based on a single key?

Would you have something like
   get(username)  ===> gives you a user object which you then check a password on
                       in the user object is a unique identifier for the system

   everything after that uses the unique identifier?
   Need a system wide unique identifier service?

How would inconsistent data be handled efficiently within a key-value system like Dynamo?
    How your end application handles this inconsistency seems to be the answer. The example given is the shopping cart, do you really care if deleted items reappear? Probably but Amazon doesn't. Can you tell if there are divergent versions?














+ pi.co RubyOnRails url shortener
  + integrate Blueprint CSS framework into pico app
  http://net.tutsplus.com/tutorials/html-css-techniques/a-closer-look-at-the-blueprint-css-framework/

+ register account with reddit

+ http://learnyousomeerlang.com/content
+ farmer's market REST API
+ blog post about Rails cascading deletes and an example.
  http://stackoverflow.com/questions/1896777/cascade-delete-in-ruby-activerecord-models





+ clean out gmail inbox
+ work on llvm-tutorial project
+ setup instructions for Apache / Passenger / Capistrano

+ Scheme / Lisp language using llvm and Ruby.
+ setup emacs on Ubuntu from scratch. Goal is to have a clean .emacs to check into github.
+ research programming languages for kids.
  http://hackety-hack.com/
+ read Ruby TK tutorial
  http://www.tkdocs.com/tutorial/firstexample.html

+ ruby gem of erlang code.
+ Ruby gem for Google Calendar API

+ Ruby / Erlang bridge
+ Ruby book p15

+ setup Connie with blog
  blogger or wordpress?
+ rename connie's email address

+ Java EE 6 project from scratch.

+ garden planner/calendar/DB ideas
+ read Erlang book, p19 

+ plant DB Mockups & Ideas



Erlang Factory Lite (FP_SYD)
http://groups.google.com/group/fp-syd/msg/140d9fa83e74e5cf

Workshop on Language Design and Implementation (FP-SYD)
http://groups.google.com/group/fp-syd/browse_frm/thread/63e7f20b0fc07022

YOW Conference Brisbane
http://www.yowconference.com.au/index.html

IOS SDK Workshops
http://www.auc.edu.au/iOS+SDK+Workshops


+ checkout Lispbox, become maintainer?
http://gigamonkeys.wordpress.com/2010/04/16/lispbox/#comments

+ website redesign
  http://www.jessiechar.com/about/me.html





3 Things:
- Ruby / Rails?
- Launch a website! 
http://highscalability.com/blog/2009/9/22/how-ravelry-scales-to-10-million-requests-using-rails.html

Open Source Contribute:
- MacPorts
- ELPA http://tromey.com/elpa/index.html
- PostgreSQL
- JRuby or Ruby?
- LispBox?


Domain Names:
Dynava
Kimona
Bluefish
Simian Ware: Software for Monkeys, by Monkeys.


Books: Smalltalk Best Practice Patterns
       Implementation Patterns




-> Java Spring
-> Ruby on Rails
-> ObjC / Cocoa








