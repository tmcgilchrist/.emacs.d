#!/usr/bin/env python
import ply.lex as lex
import sys

class Lexer:

    tokens = (
        'NUMBER',
        'PLUS',
        'MINUS',
        'TIMES',
        'DIVIDE',
        'LPAREN',
        'RPAREN'
        )

    t_PLUS = r'\+'
    t_MINUS = r'-'
    t_TIMES = r'\*'
    t_DIVIDE = r'/'
    t_LPAREN = r'\('
    t_RPAREN = r'\)'

    t_ignore = ' \t'

    def t_NUMBER(self, t):
        r'\d+'
        try:
            t.value = int(t.value)
        except ValueError:
            print "Line %d: Number %s is too large!" % (t.lineno,t.value)
            t.value = 0
        return t
            
    def t_newline(self, t):
        r'\n+'
        t.lexer.lineno += len(t.value)

    def t_error(self, t):
        print "Illegal character '%s'" % t.value[0]
        t.lexer.skip(1)

    # Build the lexer
    def build(self, **kwargs):
        self.lexer = lex.lex(object=self, **kwargs)
	
    def next(self):
        return self.lexer.token()

    def setup(self, data):
        self.lexer.input(data)

    def new_func(self):
        print "test"
