	__Python Compiler Project__

Purpose: Construct a simple lexer/parser/interpretor using Python.

Start using the MiniML example from the lectures.

PLY uses LR-parsing, see p 160.
 + LALR(1) parsing

	_Structure of a Compiler_

 LEXER -> takes a stream of characters and produces a stream of tokens
   ||
   \/
 PARSER -> takes the stream of tokens and produces a parse tree.
   ||
   \/

_lex.py_ is used to tokenize an input string.


TODO:
- How do we install libraries for python?
> python setup.py install
- How to switch emacs mode to use a particular version of python?
> Fixed
- Identify the possible tokens within MiniML.
- Generate a Formal Grammar for the langauge
- Python introspection/reflection

